os: linux
language: cpp

# safelist
branches:
  only:
  - master
  - stable
  - develop


jobs:
  include:
    - stage: build
      name: "Linux Build Debug"
      os: linux
      install:
        - bash .travis/installLinux.sh
        - bash .travis/prepareCmake.sh
      script:
        - cd build && make -j

    - stage: build
      name: "MacOS Build Debug"
      os: osx
      install:
        - bash .travis/prepareCmake.sh
      script:
        - cd build && make -j
    - stage: build
      name: "Windows MVS 2017 Build Debug"
      os: windows
      install:
        - mkdir build && cd build
        - cmake -G "Visual Studio 15 2017" ..
      script:
        - cmake --build .
    - stage: build
      name: "Windows MinGW Build"
      os: windows
      install:
        - choco upgrade --no-progress -y msys2
        - export msys2='cmd //C RefreshEnv.cmd '
        - export msys2+='& set MSYS=winsymlinks:nativestrict '
        - export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        - export mingw64="$msys2 -mingw64 -full-path -here -c \$\* --"
        - export msys2+=" -msys2 -c \$\* --"
        - $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain cmake
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        - taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        - export PATH=/C/tools/msys64/mingw64/bin:$PATH
        - export MAKE=mingw32-make  # so that Autotools can find it
      install:
        - mkdir build && cd build
        - cmake ..
      script:
        - cmake --build .

    - stage: build
      name: "Windows Build Debug"
      os: windows
      before_install:
        - |-
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c \$\* --"
        export msys2+=" -msys2 -c \$\* --"
        $msys2 pacman --sync --noconfirm --needed cmake
      script:
        - mkdir build && cd build
        - cmake ..
        - cmake --build .
        - ls

    - stage: build
      name: "Linux Build Release"
      os: linux
      install:
        - bash .travis/installLinux.sh
        - bash .travis/prepareCmakeRelease.sh
      script:
        - cd build && make -j

    - stage: build
      name: "MacOS Build Release"
      os: osx
      install:
        - bash .travis/prepareCmakeRelease.sh
      script:
        - cd build && make -j
